collapse = '&'),
algo = 'sha256')
params
params$signature
query(
base = 'https://api.binance.com',
path = endpoint,
method = method,
params = params,
config = config)
method = 'POST'
query(
base = 'https://api.binance.com',
path = endpoint,
method = method,
params = params,
config = config)
res <- query(
base = 'https://api.binance.com',
path = 'sapi/v1/asset/dust',
method = method,
params = params,
config = config)
View(res)
config <- config()
View(config)
View(config)
res <- query(
base = 'https://api.binance.com',
path = 'sapi/v1/asset/dust',
method = method,
params = params,
config = config)
View(res)
res[["url"]]
res <- query(
base = 'https://api.binance.com',
path = 'sapi/v1/asset/dust',
method = "POST",
params = params,
config = config)
res[["url"]]
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust = 'AAVE,ADA'
params <- list(asset = "AAVE",
asset = "ADA")
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE
)
params <- list(asset = "AAVE",
asset = "ADA")
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE
)
params <- list(asset = "AAVE",
asset = "ADA")
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE
)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust = 'AAVE,ADA'
params <- list(asset = "AAVE",
asset = "ADA")
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE
)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust = 'AAVE,ADA'
params <- list(asset = "AAVE",
asset = "ADA")
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE
)
View(dust_convert)
devtools::load_all()
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
binancer::binance_dust_assets()
params <- list()
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params, sign = TRUE)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
params <- list()
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params, sign = TRUE)
View(dust)
dust <- rbindlist(dust)
dust <- as.data.table(dust)
View(dust)
View(dust)
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params, sign = TRUE)
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params)
devtools::load_all()
params <- list()
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params)
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params, sign = TRUE)
devtools::load_all()
params <- list()
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params, sign = TRUE)
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params, sign = TRUE)
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params, sign = TRUE)
View(dust)
dust$details
dust$totalTransferBtc
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust <- binance_query(endpoint = 'sapi/v1/asset/dust-btc', method = 'POST', params = params, sign = TRUE)
View(dust)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
test<-binancer::binance_dust_assets()
binancer::binance_new_order("ACHBTC",side = "BUY",quoteOrderQty = 0.0001)
binancer::binance_new_order("ACHBTC",side = "BUY",type = "MARKET", time_in_force = "GTC", quoteOrderQty = 0.0001)
binancer::binance_new_order("ACHBTC",side = "BUY",type = "MARKET", time_in_force = "GTC", quoteOrderQty = 0.0001)
binancer::binance_new_order("ACHBTC",side = "BUY",type = "MARKET", time_in_force = "GTC", quoteOrderQty = 0.0001, test = FALSE)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
binancer::binance_new_order("ACHBTC",side = "BUY",type = "MARKET", time_in_force = "GTC", quoteOrderQty = 0.0001, test = FALSE)
binancer::binance_new_order("ACHBTC",side = "BUY",type = "MARKET", quoteOrderQty = 0.0001, test = FALSE)
binancer::binance_new_order("FOXBTC",side = "BUY",type = "MARKET", quoteOrderQty = 0.0001, test = FALSE)
binancer::binance_new_order("1INCHBTC",side = "BUY",type = "MARKET", quoteOrderQty = 0.0001, test = FALSE)
dust<-binancer::binance_dust_assets()
View(dust)
dust_assets<-list(dust$asset)
View(dust_assets)
dust_assets<-lapply(list,dust$asset)
dust_assets<-pmap(list,dust$asset)
dust_assets<-purrr::pmap(list,dust$asset)
dust<-as.data.table(dust$asset))
dust_table<-as.data.table(dust$asset)
View(dust_table)
dust_assets<-purrr::pmap(list,dust)
dust_assets<-purrr::pmap(list,dust_table)
params <- list(asset = dust_table$V1)
View(params)
dust_table<-as.data.table(asset = dust$asset)
params <- list(asset = "AAVE",
asset = "ADA")
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
params <- list(asset = "AAVE",
asset = "ADA")
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE)
View(dust)
View(dust)
params <- list()
if(nrow(dust)!=0){
for (i in 1:nrow()){
asset_value <- dust$asset[i]
params_addition <- list(asset = asset_value)
params <- append(params,params_addition)
}
if(nrow(dust)!=0){
for (i in 1:nrow(dust)){
asset_value <- dust$asset[i]
params_addition <- list(asset = asset_value)
params <- append(params,params_addition)
}
}
nrow(dust)!=0
nrow(dust)==0
nrow(dust)==0
nrow(dust)!=0
for (i in 1:nrow(dust)){
asset_value <- dust$asset[i]
params_addition <- list(asset = asset_value)
params <- append(params,params_addition)
}
View(params)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust<-binancer::binance_dust_assets()
params <- list()
if(nrow(dust)!=0){
for (i in 1:nrow(dust)){
asset_value <- dust$asset[i]
params_addition <- list(asset = asset_value)
params <- append(params,params_addition)
}
}
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE)
assignInMyNamespace('BINANCE_WEIGHT', as.integer(headers(res)$`x-mbx-used-weight`))
#------------------------------------------------------------------------
BINANCE_WEIGHT<-0
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
params <- list()
if(nrow(dust)!=0){
for (i in 1:nrow(dust)){
asset_value <- dust$asset[i]
params_addition <- list(asset = asset_value)
params <- append(params,params_addition)
}
}
#------------------------------------------------------------------------
params$timestamp <- timestamp()
dust_convert <- binance_query(endpoint = 'sapi/v1/asset/dust',
method = 'POST',
params = params,
sign = TRUE)
devtools::load_all()
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust<-binancer::binance_dust_assets()
binancer::binance_dust_conversion(dust)
View(dust)
dust<-binancer::binance_dust_assets(0.01)
binancer::binance_dust_conversion(dust)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust<-binancer::binance_dust_assets(0.01)
binancer::binance_dust_conversion(dust)
View(dust)
BINANCE_WEIGHT
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust<-binancer::binance_dust_assets(0.01)
binancer::binance_dust_conversion(dust)
roxygen2::roxygenise()
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust<-binancer::binance_dust_assets(0.01)
binancer::binance_dust_conversion(dust)
library(binancer)
library(binancer)
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust<-binancer::binance_dust_assets(0.01)
binancer::binance_dust_conversion(dust)
BINANCE_WEIGHT
BINANCE_WEIGHT>1159
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust <- binancer::binance_dust_assets(0.01)
dust_converted <- binancer::binance_dust_conversion(dust)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust <- binancer::binance_dust_assets(0.01)
dust <- binancer::binance_dust_assets(0.01)
dust <- binancer::binance_dust_assets(0.01)
dust <- binancer::binance_dust_assets(0.01)
dust <- binancer::binance_dust_assets(0.01)
BINANCE_WEIGHT
endpoint = 'sapi/v1/asset/dust-btc'
method = 'POST'
params = list()
body = NULL
sign = FALSE
retry = method == 'GET'
content_as = 'parsed'
# if Binance weight is approaching the limit of 1200, wait for the next full minute
if (BINANCE_WEIGHT > 1159) {
Sys.sleep(61 - as.integer(format(Sys.time(), "%S")))
}
method <- match.arg(method)
endpoint = 'sapi/v1/asset/dust-btc'
method = 'POST'
params = list()
body = NULL
sign = FALSE
retry = method == 'POST'
content_as = 'parsed'
# if Binance weight is approaching the limit of 1200, wait for the next full minute
if (BINANCE_WEIGHT > 1159) {
Sys.sleep(61 - as.integer(format(Sys.time(), "%S")))
}
if (isTRUE(sign)) {
params <- binance_sign(params)
config <- add_headers('X-MBX-APIKEY' = binance_key())
} else {
config <- config()
}
res <- query(
base = 'https://api.binance.com',
path = endpoint,
method = method,
params = params,
config = config)
assignInMyNamespace('BINANCE_WEIGHT', as.integer(headers(res)$`x-mbx-used-weight`))
as.integer(headers(res)$`x-mbx-used-weight`)
res <- content(res, as = content_as)
View(res)
res
headers(res)
headers(res)$`x-mbx-used-weight`)
headers(res)$`x-mbx-used-weight`
headers(res)
res <- query(
base = 'https://api.binance.com',
path = endpoint,
method = method,
params = params,
config = config)
View(res)
as.integer(headers(res)$`x-mbx-used-weight`)
headers(res)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust <- binancer::binance_dust_assets(0.01)
dust <- binancer::binance_dust_assets(0.01)
dust <- binancer::binance_dust_assets(0.01)
dust <- binancer::binance_dust_assets(0.01)
dust <- binancer::binance_dust_assets(0.001)
dust <- binancer::binance_dust_assets(0.00005)
devtools::load_all()
binancer::binance_credentials(key = "iUso7FWjy1Q5EJuylw54ffNGsSpq9kZ1VRoBdKAECzTlWmk5n1jDSunBwWdINaHQ",
secret = "lGOYowHwBg6qKGRqyZhIJoK4o49ZH4vIEBiI9cZOezSq1VQ1FnL4mI0zWTG9e2gS")
dust <- binancer::binance_dust_assets(0.01)
class(dust)
dust <- binancer::binance_dust_assets(0.01)
dust_converted <- binancer::binance_dust_conversion(dust)
View(dust_converted)
install.packages(tidyverse)
install.packages(@)
install.packages("tidyverse")
install.packages("devtools")
devtools::install_github(mattdepas/binancer)
devtools::install_github("mattdepas/binancer")
library(binancer)
library(binancer)
roxygen2::roxygenize()
warnings()
install.packages("TTR")
roxygen2::roxygenize()
warnings()
roxygenize
roxygen2::roxygenize()
roxygen2::roxygenize()
devtools::uninstall("binancer")
devtools::uninstall(binancer)
roxygen2::roxygenize()
warnings()
roxygen2::roxygenize()
warnings()
roxygen2::roxygenize()
warnings(0)
roxygen2::roxygenize()
warnings()
roxygen2::roxygenize()
warnings(0)
library(binancer)
binancer::backtest_settings()
binancer::backtest_settings_check()
binancer::historical()
roxygen2::roxygenize()
library(binancer)
binancer::backtest_settings()
binancer::backtest_settings_check()
binancer::historical()
roxygen2::roxygenize()
binancer::backtest_settings()
history<-binancer::historical()
View(history)
library(binancer)
library(binancer)
library(tidyverse)
binancer::backtest_settings()
binancer::backtest_settings_check()
df<-binancer::historical()
df_i<-binancer::generate_indicator(df)
binancer::backtest(df_i)
View(df)
roxygen2::roxygenise()
warnings()
library(binancer)
binancer::backtest_settings(start_time = "15-06-2022", end_time = start_time = "29-06-2022")
binancer::backtest_settings(start_time = "15-06-2022", end_time = "29-06-2022")
binancer::backtest_settings_check()
binancer::backtest_settings()
binancer::backtest_settings_check()
binancer::backtest_settings(start_time = "2022-06-10", end_time = "2022-06-20")
binancer::backtest_settings_check()
df<-binancer::historical()
df_i<-binancer::generate_indicator(df)
binancer::backtest(df_i)
View(total)
binancer::backtest_settings(start_time = "2022-06-10", end_time = "2022-06-20", interval = c("4h"))
binancer::backtest_settings_check()
df<-binancer::historical()
df_i<-binancer::generate_indicator(df)
binancer::backtest(df_i)
View(total)
roxygen2::roxygenise()
library(binancer)
binancer::backtest_settings(start_time = "2022-05-10", end_time = "2022-06-20", interval = c("4h"))
binancer::backtest_settings_check()
df<-binancer::historical()
df_i<-binancer::generate_indicator(df)
binancer::backtest(df_i)
View(total)
total<-null
total<-NULL
coin_data<-NULL
timelist<-NULL
library(binancer)
roxygen2::roxygenise()
library(binancer)
roxygen2::roxygenise()
library(binancer)
binancer::backtest_settings()
binancer::backtest_settings(start_time = "2022-06-01", end_time = "2022-06-05")
binancer::backtest_settings_check()
binancer::backtest_settings(start_time = "2022-06-01", end_time = "2022-06-05", interval = c("12h"))
binancer::backtest_settings_check()
data<- binancer::historical()
data_g<-generate_indicator(data)
View(data)
backtest(data_g)
View(total)
View(coin_data)
View(data_g)
binancer::backtest_settings(start_time = "2022-06-01", end_time = "2022-06-05", interval = c("1h"))
binancer::backtest_settings_check()
data<- binancer::historical()
df_i<-binancer::generate_indicator(df)
df_i<-binancer::generate_indicator(data)
backtest(df_i)
View(total)
binancer::backtest_settings(start_time = "2022-06-01", end_time = "2022-06-02", interval = c("1h"))
library(binancer)
roxygenize()
roxygen2::roxygenise()
library(binancer)
binancer::backtest_settings(start_time = "2022-06-01", end_time = "2022-06-02", interval = c("1h"))
binancer::backtest_settings(start_time = "2022-06-01", end_time = "2022-06-03", interval = c("1h"))
binancer::backtest_settings_check()
data<- binancer::historical()
data_g<-generate_indicator(data)
binancer::backtest(data_g)
View(coin_data)
roxygen2::roxygenise()
binancer::backtest_settings(start_time = "2022-06-01", end_time = "2022-06-02", interval = c("1h"))
binancer::backtest_settings_check()
data<-binancer::historical()
df_i<-binancer::generate_indicator(data)
binancer::backtest(data_g)
binancer::backtest(df_i)
View(coin_data)
binancer::backtest_settings(start_time = "2022-06-01", end_time = "2022-06-03", interval = c("1h"))
binancer::backtest_settings_check()
data<-binancer::historical()
df_i<-binancer::generate_indicator(data)
binancer::backtest(df_i)
View(data)
View(total)
View(coin_data)
devtools::uninstall(binancer)
devtools::uninstall("binancer")
library(binancer)
library(binancer)
library(binancer)
roxygen2::roxygenise()
library(binancer)
binancer::backtest_settings(start_time = "2022-06-01", end_time = "2022-06-03", interval = c("1h"))
binancer::backtest_settings_check()
data<-binancer::historical()
df_i<-binancer::generate_indicator(data)
binancer::backtest(df_i)
View(total)
View(coin_data)
binancer::gen_coindata_empty()
View(df_i)
devtools::install_git("mattdepas/binancer")
devtools::install_git("mattdepas\binancer")
